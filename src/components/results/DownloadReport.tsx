import React, { useState } from 'react';
import { Download, FileText, Check, Loader } from 'lucide-react';
import { GenomeData, UserData } from '../../types/UserData';
import html2pdf from 'html2pdf.js';

interface DownloadReportProps {
  genomeData: GenomeData;
  userData: UserData;
  scientificMode: boolean;
}

const DownloadReport: React.FC<DownloadReportProps> = ({ 
  genomeData, 
  userData, 
  scientificMode 
}) => {
  const [isGenerating, setIsGenerating] = useState(false);
  const [isComplete, setIsComplete] = useState(false);

  const generatePDF = async () => {
    setIsGenerating(true);
    
    // Create a temporary container for the PDF content
    const element = document.createElement('div');
    element.innerHTML = `
      <div style="font-family: Arial, sans-serif; color: #333; max-width: 800px; margin: 0 auto; padding: 40px;">
        <div style="text-align: center; margin-bottom: 40px; border-bottom: 3px solid #00ff88; padding-bottom: 20px;">
          <h1 style="color: #00ff88; font-size: 32px; margin: 0;">Genome.Me</h1>
          <h2 style="color: #666; font-size: 18px; margin: 10px 0;">Personalized Genetic Analysis Report</h2>
          <p style="color: #999; font-size: 14px;">Report ID: ${genomeData.reportId} | Generated: ${new Date().toLocaleDateString()}</p>
        </div>

        <div style="margin-bottom: 30px;">
          <h3 style="color: #00ff88; border-bottom: 2px solid #eee; padding-bottom: 5px;">Personal Information</h3>
          <table style="width: 100%; border-collapse: collapse; margin-top: 15px;">
            <tr><td style="padding: 8px 0; font-weight: bold;">Name:</td><td>${userData.fullName}</td></tr>
            <tr><td style="padding: 8px 0; font-weight: bold;">Country:</td><td>${userData.country}</td></tr>
            <tr><td style="padding: 8px 0; font-weight: bold;">Year of Birth:</td><td>${userData.yearOfBirth}</td></tr>
            <tr><td style="padding: 8px 0; font-weight: bold;">Gender:</td><td>${userData.gender}</td></tr>
          </table>
        </div>

        <div style="margin-bottom: 30px;">
          <h3 style="color: #00ff88; border-bottom: 2px solid #eee; padding-bottom: 5px;">Ancestry Breakdown</h3>
          ${Object.entries(genomeData.ancestry).map(([region, percentage]) => `
            <div style="display: flex; justify-content: space-between; padding: 5px 0; border-bottom: 1px solid #f0f0f0;">
              <span>${region}</span>
              <span style="font-weight: bold;">${percentage}%</span>
            </div>
          `).join('')}
        </div>

        <div style="margin-bottom: 30px;">
          <h3 style="color: #00ff88; border-bottom: 2px solid #eee; padding-bottom: 5px;">Genetic Traits</h3>
          ${genomeData.traits.map(trait => `
            <div style="margin-bottom: 15px; padding: 15px; background-color: #f9f9f9; border-radius: 5px;">
              <div style="font-weight: bold; color: #333; margin-bottom: 5px;">${trait.trait} (${trait.gene})</div>
              <div style="color: #00ff88; font-weight: bold; margin-bottom: 5px;">Status: ${trait.status}</div>
              <div style="color: #666; font-size: 14px;">${trait.description}</div>
            </div>
          `).join('')}
        </div>

        <div style="margin-bottom: 30px;">
          <h3 style="color: #00ff88; border-bottom: 2px solid #eee; padding-bottom: 5px;">Rare Gene Highlights</h3>
          ${genomeData.rareGenes.map(gene => `
            <div style="margin-bottom: 15px; padding: 15px; background-color: #f0f8ff; border-radius: 5px; border-left: 4px solid #00ff88;">
              <div style="font-weight: bold; color: #333; margin-bottom: 5px;">${gene.code} - ${gene.trait}</div>
              <div style="color: #666; font-size: 14px;">${gene.description}</div>
            </div>
          `).join('')}
        </div>

        <div style="margin-bottom: 30px;">
          <h3 style="color: #00ff88; border-bottom: 2px solid #eee; padding-bottom: 5px;">AI Analysis Summary</h3>
          <div style="padding: 20px; background-color: #f9f9f9; border-radius: 5px; line-height: 1.6;">
            ${genomeData.aiSummary}
          </div>
        </div>

        <div style="text-align: center; margin-top: 40px; padding-top: 20px; border-top: 2px solid #eee; color: #999; font-size: 12px;">
          <p><strong>IMPORTANT DISCLAIMER:</strong></p>
          <p>This report is generated for entertainment and educational purposes only. 
          The genetic analysis is simulated and should not be used for medical decisions or health advice. 
          Consult with healthcare professionals for actual genetic testing and medical guidance.</p>
          <p style="margin-top: 20px;">Generated by Genome.Me - Your Personalized DNA Analysis Lab</p>
        </div>
      </div>
    `;

    // Configure PDF options
    const options = {
      margin: 0.5,
      filename: `GenomeMe_Report_${genomeData.reportId}.pdf`,
      image: { type: 'jpeg', quality: 0.98 },
      html2canvas: { scale: 2 },
      jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' }
    };

    try {
      await html2pdf().from(element).set(options).save();
      setIsComplete(true);
      setTimeout(() => {
        setIsComplete(false);
        setIsGenerating(false);
      }, 2000);
    } catch (error) {
      console.error('PDF generation failed:', error);
      setIsGenerating(false);
    }
  };

  return (
    <div className="glass-card download-report">
      <div className="card-header">
        <FileText size={24} />
        <h3>Downloadable Report</h3>
      </div>

      <div className="download-content">
        <div className="report-preview">
          <div className="preview-header">
            <h4>Genome.Me Analysis Report</h4>
            <p>Complete genetic analysis with all sections</p>
          </div>

          <div className="report-features">
            <div className="feature-item">
              <Check size={16} />
              <span>Personal Information & Ancestry</span>
            </div>
            <div className="feature-item">
              <Check size={16} />
              <span>Detailed Genetic Traits Analysis</span>
            </div>
            <div className="feature-item">
              <Check size={16} />
              <span>Rare Gene Highlights</span>
            </div>
            <div className="feature-item">
              <Check size={16} />
              <span>AI-Generated Insights</span>
            </div>
            <div className="feature-item">
              <Check size={16} />
              <span>Professional Formatting</span>
            </div>
          </div>

          <div className="report-info">
            <div className="info-item">
              <span className="info-label">Report ID:</span>
              <span className="info-value">{genomeData.reportId}</span>
            </div>
            <div className="info-item">
              <span className="info-label">Generated:</span>
              <span className="info-value">{new Date().toLocaleDateString()}</span>
            </div>
            <div className="info-item">
              <span className="info-label">Format:</span>
              <span className="info-value">PDF Document</span>
            </div>
          </div>
        </div>

        <button 
          className={`download-button ${isGenerating ? 'generating' : ''} ${isComplete ? 'complete' : ''}`}
          onClick={generatePDF}
          disabled={isGenerating}
        >
          {isComplete ? (
            <>
              <Check size={20} />
              Downloaded Successfully!
            </>
          ) : isGenerating ? (
            <>
              <Loader size={20} className="spinning" />
              Generating PDF...
            </>
          ) : (
            <>
              <Download size={20} />
              Download Full Report
            </>
          )}
        </button>

        <p className="download-disclaimer">
          * This simulation is for entertainment only. Not for medical use.
        </p>
      </div>
    </div>
  );
};

export default DownloadReport;